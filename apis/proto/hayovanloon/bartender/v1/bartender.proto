/*
 * Copyright 2020 Hayo van Loon
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

syntax = "proto3";

package hayovanloon.bartender.v1;

option java_multiple_files = true;
option java_package = "gl.greeter";
option go_package = "github.com/HayoVanLoon/genproto/hayovanloon/bartender/v1;bartender";

import "google/api/annotations.proto";


service Bartender {

    // Adds a new beer.
    rpc CreateBeer (CreateBeerRequest) returns (Beer) {
        option (google.api.http) = {
            post: "/v1/beers/{brand}/type"
            body: "beer"
        };
    }

    // Gets a beer.
    rpc GetBeer (GetBeerRequest) returns (Beer) {
        option (google.api.http) = {
            get: "/v1/beers/{brand}/type/{name}"
        };
    }
}

// The main resource
message Beer {

    // Name of the beer (type)
    string name = 1;

    oneof packaging {
        // Bottle size in centiliters
        int32 bottle_cl = 10;

        // Glass size in centiliters
        int32 glass_cl = 11;

        // Keg size in liters
        int32 keg_l = 12;
    }
}

message GetBeerRequest {

    // Name of the beer (type)
    string name = 1;

    // The beer brand
    string brand = 2;
}

message CreateBeerRequest {

    // The beer brand
    string brand = 1;

    // The beer particulars
    Beer beer = 2;
}
